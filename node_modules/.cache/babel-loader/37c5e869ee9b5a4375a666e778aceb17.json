{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexandra.brown\\\\Downloads\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport \"./ExpenseForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  // All these three states are related to the form. It is the same concept repeated three times\n  // const [enteredTitle, setEnteredTitle] = useState(\"\");\n  // const [enteredAmount, setEnteredAmount] = useState(\"\");\n  // const [enteredDate, setEnteredDate] = useState(\"\");\n  // Instead, you can go for one state instead of 3. You do this by passing in UseState only once and passing in an object as a value\n  // In this object, you can group together your states\n  // The difference now is that whenever you update the state, you need to update all 3 properties\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\"\n  }); // Now in the handlers, you want to pass in a new object where you set the entered value to event.target.value BUT you also need to ensure the other properties are not getting lost\n  // You can do this by using the sprea operator to copy over the other values into your object and then you're just overriding 'enteredTitle'\n  // However! There is a problem - here, we are depending on our previous state for updating the state.\n  // const titleChangeHandler = (event) => {\n  //   setUserInput({\n  //     ...userInput,\n  //     enteredTitle: event.target.value,\n  //   });\n  // };\n  // RULE: Whenever you update state and it depends on the previous state, instead of calling it like you have above, you should pass in a function to the setUserInput\n  // This function will recieve the previous state snapshot. You should then return the new state snapshot by spreading the previous state key value pairs and overring the specific prop\n\n  const titleChangeHandler = event => {\n    setUserInput(prevState => {\n      return { ...prevState,\n        enteredTitle: event.target.value\n      };\n    });\n  };\n\n  const amountChangeHandler = event => {\n    setUserInput({ ...userInput,\n      enteredAmount: event.target.value\n    });\n  };\n\n  const dateChangeHandler = event => {\n    setUserInput({ ...userInput,\n      enteredDate: event.target.value\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      enteredTitle,\n      enteredAmount,\n      ent\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExpenseForm, \"fOKiQJ0uFtiE+wpCN1+3hpMhKHE=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["useState","ExpenseForm","userInput","setUserInput","enteredTitle","enteredAmount","enteredDate","titleChangeHandler","event","prevState","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","ent"],"sources":["C:/Users/alexandra.brown/Downloads/01-starting-setup/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import \"./ExpenseForm.css\";\nimport { useState } from \"react\";\n\nconst ExpenseForm = () => {\n  // All these three states are related to the form. It is the same concept repeated three times\n  // const [enteredTitle, setEnteredTitle] = useState(\"\");\n  // const [enteredAmount, setEnteredAmount] = useState(\"\");\n  // const [enteredDate, setEnteredDate] = useState(\"\");\n\n  // Instead, you can go for one state instead of 3. You do this by passing in UseState only once and passing in an object as a value\n  // In this object, you can group together your states\n  // The difference now is that whenever you update the state, you need to update all 3 properties\n  const [userInput, setUserInput] = useState({\n    enteredTitle: \"\",\n    enteredAmount: \"\",\n    enteredDate: \"\",\n  });\n\n  // Now in the handlers, you want to pass in a new object where you set the entered value to event.target.value BUT you also need to ensure the other properties are not getting lost\n  // You can do this by using the sprea operator to copy over the other values into your object and then you're just overriding 'enteredTitle'\n  // However! There is a problem - here, we are depending on our previous state for updating the state.\n  // const titleChangeHandler = (event) => {\n  //   setUserInput({\n  //     ...userInput,\n  //     enteredTitle: event.target.value,\n  //   });\n  // };\n\n  // RULE: Whenever you update state and it depends on the previous state, instead of calling it like you have above, you should pass in a function to the setUserInput\n  // This function will recieve the previous state snapshot. You should then return the new state snapshot by spreading the previous state key value pairs and overring the specific prop\n\n  const titleChangeHandler = (event) => {\n    setUserInput((prevState) => {\n      return { ...prevState, enteredTitle: event.target.value };\n    });\n  };\n\n  const amountChangeHandler = (event) => {\n    setUserInput({\n      ...userInput,\n      enteredAmount: event.target.value,\n    });\n  };\n\n  const dateChangeHandler = (event) => {\n    setUserInput({\n      ...userInput,\n      enteredDate: event.target.value,\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      enteredTitle,\n      enteredAmount,\n      ent\n    }\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB;EACA;EACA;EACA;EAEA;EACA;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC;IACzCI,YAAY,EAAE,EAD2B;IAEzCC,aAAa,EAAE,EAF0B;IAGzCC,WAAW,EAAE;EAH4B,CAAD,CAA1C,CATwB,CAexB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;;EAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;IACpCL,YAAY,CAAEM,SAAD,IAAe;MAC1B,OAAO,EAAE,GAAGA,SAAL;QAAgBL,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaC;MAA3C,CAAP;IACD,CAFW,CAAZ;EAGD,CAJD;;EAMA,MAAMC,mBAAmB,GAAIJ,KAAD,IAAW;IACrCL,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXG,aAAa,EAAEG,KAAK,CAACE,MAAN,CAAaC;IAFjB,CAAD,CAAZ;EAID,CALD;;EAOA,MAAME,iBAAiB,GAAIL,KAAD,IAAW;IACnCL,YAAY,CAAC,EACX,GAAGD,SADQ;MAEXI,WAAW,EAAEE,KAAK,CAACE,MAAN,CAAaC;IAFf,CAAD,CAAZ;EAID,CALD;;EAOA,MAAMG,aAAa,GAAIN,KAAD,IAAW;IAC/BA,KAAK,CAACO,cAAN;IAEA,MAAMC,WAAW,GAAG;MAClBZ,YADkB;MAElBC,aAFkB;MAGlBY;IAHkB,CAApB;EAKD,CARD;;EAUA,oBACE;IAAM,QAAQ,EAAEH,aAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,QAAQ,EAAEP;QAA7B;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,GAAG,EAAC,MAFN;UAGE,IAAI,EAAC,MAHP;UAIE,QAAQ,EAAEK;QAJZ;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAcE;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,MADP;UAEE,GAAG,EAAC,YAFN;UAGE,GAAG,EAAC,YAHN;UAIE,QAAQ,EAAEC;QAJZ;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAdF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAyBE;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CAzFD;;GAAMZ,W;;KAAAA,W;AA2FN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}